
services:
  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_INTERNAL://0.0.0.0:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-exporter:
    container_name: kafka-exporter
    image: danielqsj/kafka-exporter
    depends_on:
      - kafka
    command:
      - "--kafka.server=kafka:9092"
    ports:
      - "9308:9308"

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090"

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    depends_on:
      - prometheus
    ports:
      - "3000:3000"


#  sensor_producer:
#    container_name: sensor_producer
#    build:
#      context: ./sensor_producer.py
#    depends_on:
#      - kafka
#    environment:
#      KAFKA_BROKER: kafka:9092

#  sensor_consumer:
#    container_name: sensor_consumer
#    build:
#      context: ./sensor_consumer.py
#    depends_on:
#      - kafka
#    ports:
#      - "8000:8000"  # Expose Prometheus metrics
#    environment:
#      KAFKA_BROKER: kafka:9092
#      PROMETHEUS_PORT: 8000